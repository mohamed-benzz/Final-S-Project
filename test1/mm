# Compiler and Assembler
CC = gcc
NASM = nasm

# Flags
CFLAGS = -O2 -Wall -Iincludes           # Add includes/ to search path for headers
NASMFLAGS = -f elf64 -Iincludes         # Add includes/ to search path for macros

# Executable name
TARGET = bench

# Source files
C_SRCS = main.c includes/libcc.c
ASM_SRCS = includes/libasm.asm          # âœ… Only compile libasm.asm

# Header dependencies
C_HEADERS = includes/libcc.h includes/libasm.h
ASM_HEADERS = includes/lib.enc

# Object files
C_OBJS = $(C_SRCS:.c=.o)
ASM_OBJS = $(ASM_SRCS:.asm=.o)
OBJS = $(C_OBJS) $(ASM_OBJS)

# Default rule: build everything
all: $(TARGET)

# Linking
$(TARGET): $(OBJS)
	$(CC) -o $@ $^

# Compile C files
%.o: %.c $(C_HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

# Assemble ASM files
%.o: %.asm $(ASM_HEADERS)
	$(NASM) $(NASMFLAGS) $< -o $@

# Clean build files
clean:
	rm -f *.o includes/*.o src/*.o $(TARGET)

